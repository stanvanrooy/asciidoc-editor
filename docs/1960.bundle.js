/*! For license information please see 1960.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkweb_project_template=self.webpackChunkweb_project_template||[]).push([[1960],{71960:(e,t,n)=>{n.r(t),n.d(t,{conf:()=>i,language:()=>r});var i={comments:{lineComment:"//",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"[",close:"]"},{open:"{",close:"}"},{open:"(",close:")"},{open:"'",close:"'",notIn:["string","comment"]},{open:'"',close:'"',notIn:["string"]}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}],folding:{markers:{start:new RegExp("^\\s*#pragma\\s+region\\b"),end:new RegExp("^\\s*#pragma\\s+endregion\\b")}}},r={defaultToken:"",tokenPostfix:".cpp",brackets:[{token:"delimiter.curly",open:"{",close:"}"},{token:"delimiter.parenthesis",open:"(",close:")"},{token:"delimiter.square",open:"[",close:"]"},{token:"delimiter.angle",open:"<",close:">"}],keywords:["abstract","amp","array","auto","bool","break","case","catch","char","class","const","constexpr","const_cast","continue","cpu","decltype","default","delegate","delete","do","double","dynamic_cast","each","else","enum","event","explicit","export","extern","false","final","finally","float","for","friend","gcnew","generic","goto","if","in","initonly","inline","int","interface","interior_ptr","internal","literal","long","mutable","namespace","new","noexcept","nullptr","__nullptr","operator","override","partial","pascal","pin_ptr","private","property","protected","public","ref","register","reinterpret_cast","restrict","return","safe_cast","sealed","short","signed","sizeof","static","static_assert","static_cast","struct","switch","template","this","thread_local","throw","tile_static","true","try","typedef","typeid","typename","union","unsigned","using","virtual","void","volatile","wchar_t","where","while","_asm","_based","_cdecl","_declspec","_fastcall","_if_exists","_if_not_exists","_inline","_multiple_inheritance","_pascal","_single_inheritance","_stdcall","_virtual_inheritance","_w64","__abstract","__alignof","__asm","__assume","__based","__box","__builtin_alignof","__cdecl","__clrcall","__declspec","__delegate","__event","__except","__fastcall","__finally","__forceinline","__gc","__hook","__identifier","__if_exists","__if_not_exists","__inline","__int128","__int16","__int32","__int64","__int8","__interface","__leave","__m128","__m128d","__m128i","__m256","__m256d","__m256i","__m64","__multiple_inheritance","__newslot","__nogc","__noop","__nounwind","__novtordisp","__pascal","__pin","__pragma","__property","__ptr32","__ptr64","__raise","__restrict","__resume","__sealed","__single_inheritance","__stdcall","__super","__thiscall","__try","__try_cast","__typeof","__unaligned","__unhook","__uuidof","__value","__virtual_inheritance","__w64","__wchar_t"],operators:["=",">","<","!","~","?",":","==","<=",">=","!=","&&","||","++","--","+","-","*","/","&","|","^","%","<<",">>",">>>","+=","-=","*=","/=","&=","|=","^=","%=","<<=",">>=",">>>="],symbols:/[=><!~?:&|+\-*\/\^%]+/,escapes:/\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,integersuffix:/([uU](ll|LL|l|L)|(ll|LL|l|L)?[uU]?)/,floatsuffix:/[fFlL]?/,encoding:/u|u8|U|L/,tokenizer:{root:[[/@encoding?R\"(?:([^ ()\\\t]*))\(/,{token:"string.raw.begin",next:"@raw.$1"}],[/[a-zA-Z_]\w*/,{cases:{"@keywords":{token:"keyword.$0"},"@default":"identifier"}}],[/^\s*#\s*include/,{token:"keyword.directive.include",next:"@include"}],[/^\s*#\s*\w+/,"keyword.directive"],{include:"@whitespace"},[/\[\s*\[/,{token:"annotation",next:"@annotation"}],[/[{}()\[\]]/,"@brackets"],[/[<>](?!@symbols)/,"@brackets"],[/@symbols/,{cases:{"@operators":"delimiter","@default":""}}],[/\d*\d+[eE]([\-+]?\d+)?(@floatsuffix)/,"number.float"],[/\d*\.\d+([eE][\-+]?\d+)?(@floatsuffix)/,"number.float"],[/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/,"number.hex"],[/0[0-7']*[0-7](@integersuffix)/,"number.octal"],[/0[bB][0-1']*[0-1](@integersuffix)/,"number.binary"],[/\d[\d']*\d(@integersuffix)/,"number"],[/\d(@integersuffix)/,"number"],[/[;,.]/,"delimiter"],[/"([^"\\]|\\.)*$/,"string.invalid"],[/"/,"string","@string"],[/'[^\\']'/,"string"],[/(')(@escapes)(')/,["string","string.escape","string"]],[/'/,"string.invalid"]],whitespace:[[/[ \t\r\n]+/,""],[/\/\*\*(?!\/)/,"comment.doc","@doccomment"],[/\/\*/,"comment","@comment"],[/\/\/.*\\$/,"comment","@linecomment"],[/\/\/.*$/,"comment"]],comment:[[/[^\/*]+/,"comment"],[/\*\//,"comment","@pop"],[/[\/*]/,"comment"]],linecomment:[[/.*[^\\]$/,"comment","@pop"],[/[^]+/,"comment"]],doccomment:[[/[^\/*]+/,"comment.doc"],[/\*\//,"comment.doc","@pop"],[/[\/*]/,"comment.doc"]],string:[[/[^\\"]+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/"/,"string","@pop"]],raw:[[/(.*)(\))(?:([^ ()\\\t"]*))(\")/,{cases:{"$3==$S2":["string.raw","string.raw.end","string.raw.end",{token:"string.raw.end",next:"@pop"}],"@default":["string.raw","string.raw","string.raw","string.raw"]}}],[/.*/,"string.raw"]],annotation:[{include:"@whitespace"},[/using|alignas/,"keyword"],[/[a-zA-Z0-9_]+/,"annotation"],[/[,:]/,"delimiter"],[/[()]/,"@brackets"],[/\]\s*\]/,{token:"annotation",next:"@pop"}]],include:[[/(\s*)(<)([^<>]*)(>)/,["","keyword.directive.include.begin","string.include.identifier",{token:"keyword.directive.include.end",next:"@pop"}]],[/(\s*)(")([^"]*)(")/,["","keyword.directive.include.begin","string.include.identifier",{token:"keyword.directive.include.end",next:"@pop"}]]]}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FDWCxDQUFDLFdBQVksVUFBVyxRQUN4QixDQUFDLE9BQVEsWUFFWEMsV0FBWSxDQUNWLENBQUMsVUFBVyxlQUNaLENBQUMsT0FBUSxjQUFlLFFBQ3hCLENBQUMsUUFBUyxnQkFFWkMsT0FBUSxDQUNOLENBQUMsVUFBVyxVQUNaLENBQUMsV0FBWSxpQkFDYixDQUFDLE1BQU8seUJBQ1IsQ0FBQyxJQUFLLFNBQVUsU0FFbEJDLElBQUssQ0FDSCxDQUNFLGlDQUNBLENBQ0VQLE1BQU8sQ0FDTCxVQUFXLENBQ1QsYUFDQSxpQkFDQSxpQkFDQSxDQUFFWCxNQUFPLGlCQUFrQlUsS0FBTSxTQUVuQyxXQUFZLENBQUMsYUFBYyxhQUFjLGFBQWMsaUJBSTdELENBQUMsS0FBTSxlQUVUUyxXQUFZLENBQ1YsQ0FBRVAsUUFBUyxlQUNYLENBQUMsZ0JBQWlCLFdBQ2xCLENBQUMsZ0JBQWlCLGNBQ2xCLENBQUMsT0FBUSxhQUNULENBQUMsT0FBUSxhQUNULENBQUMsVUFBVyxDQUFFWixNQUFPLGFBQWNVLEtBQU0sVUFFM0NFLFFBQVMsQ0FDUCxDQUNFLHNCQUNBLENBQ0UsR0FDQSxrQ0FDQSw0QkFDQSxDQUFFWixNQUFPLGdDQUFpQ1UsS0FBTSxVQUdwRCxDQUNFLHFCQUNBLENBQ0UsR0FDQSxrQ0FDQSw0QkFDQSxDQUFFVixNQUFPLGdDQUFpQ1UsS0FBTSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1wcm9qZWN0LXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9jcHAvY3BwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIFZlcnNpb246IDAuMzEuMSgzMzc1ODc4NTliMWMxNzEzMTRiNDA1MDMxNzExODhiNmNlYTZhMzJhKVxuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L21vbmFjby1lZGl0b3IvYmxvYi9tYWluL0xJQ0VOU0UudHh0XG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuLy8gc3JjL2Jhc2ljLWxhbmd1YWdlcy9jcHAvY3BwLnRzXG52YXIgY29uZiA9IHtcbiAgY29tbWVudHM6IHtcbiAgICBsaW5lQ29tbWVudDogXCIvL1wiLFxuICAgIGJsb2NrQ29tbWVudDogW1wiLypcIiwgXCIqL1wiXVxuICB9LFxuICBicmFja2V0czogW1xuICAgIFtcIntcIiwgXCJ9XCJdLFxuICAgIFtcIltcIiwgXCJdXCJdLFxuICAgIFtcIihcIiwgXCIpXCJdXG4gIF0sXG4gIGF1dG9DbG9zaW5nUGFpcnM6IFtcbiAgICB7IG9wZW46IFwiW1wiLCBjbG9zZTogXCJdXCIgfSxcbiAgICB7IG9wZW46IFwie1wiLCBjbG9zZTogXCJ9XCIgfSxcbiAgICB7IG9wZW46IFwiKFwiLCBjbG9zZTogXCIpXCIgfSxcbiAgICB7IG9wZW46IFwiJ1wiLCBjbG9zZTogXCInXCIsIG5vdEluOiBbXCJzdHJpbmdcIiwgXCJjb21tZW50XCJdIH0sXG4gICAgeyBvcGVuOiAnXCInLCBjbG9zZTogJ1wiJywgbm90SW46IFtcInN0cmluZ1wiXSB9XG4gIF0sXG4gIHN1cnJvdW5kaW5nUGFpcnM6IFtcbiAgICB7IG9wZW46IFwie1wiLCBjbG9zZTogXCJ9XCIgfSxcbiAgICB7IG9wZW46IFwiW1wiLCBjbG9zZTogXCJdXCIgfSxcbiAgICB7IG9wZW46IFwiKFwiLCBjbG9zZTogXCIpXCIgfSxcbiAgICB7IG9wZW46ICdcIicsIGNsb3NlOiAnXCInIH0sXG4gICAgeyBvcGVuOiBcIidcIiwgY2xvc2U6IFwiJ1wiIH1cbiAgXSxcbiAgZm9sZGluZzoge1xuICAgIG1hcmtlcnM6IHtcbiAgICAgIHN0YXJ0OiBuZXcgUmVnRXhwKFwiXlxcXFxzKiNwcmFnbWFcXFxccytyZWdpb25cXFxcYlwiKSxcbiAgICAgIGVuZDogbmV3IFJlZ0V4cChcIl5cXFxccyojcHJhZ21hXFxcXHMrZW5kcmVnaW9uXFxcXGJcIilcbiAgICB9XG4gIH1cbn07XG52YXIgbGFuZ3VhZ2UgPSB7XG4gIGRlZmF1bHRUb2tlbjogXCJcIixcbiAgdG9rZW5Qb3N0Zml4OiBcIi5jcHBcIixcbiAgYnJhY2tldHM6IFtcbiAgICB7IHRva2VuOiBcImRlbGltaXRlci5jdXJseVwiLCBvcGVuOiBcIntcIiwgY2xvc2U6IFwifVwiIH0sXG4gICAgeyB0b2tlbjogXCJkZWxpbWl0ZXIucGFyZW50aGVzaXNcIiwgb3BlbjogXCIoXCIsIGNsb3NlOiBcIilcIiB9LFxuICAgIHsgdG9rZW46IFwiZGVsaW1pdGVyLnNxdWFyZVwiLCBvcGVuOiBcIltcIiwgY2xvc2U6IFwiXVwiIH0sXG4gICAgeyB0b2tlbjogXCJkZWxpbWl0ZXIuYW5nbGVcIiwgb3BlbjogXCI8XCIsIGNsb3NlOiBcIj5cIiB9XG4gIF0sXG4gIGtleXdvcmRzOiBbXG4gICAgXCJhYnN0cmFjdFwiLFxuICAgIFwiYW1wXCIsXG4gICAgXCJhcnJheVwiLFxuICAgIFwiYXV0b1wiLFxuICAgIFwiYm9vbFwiLFxuICAgIFwiYnJlYWtcIixcbiAgICBcImNhc2VcIixcbiAgICBcImNhdGNoXCIsXG4gICAgXCJjaGFyXCIsXG4gICAgXCJjbGFzc1wiLFxuICAgIFwiY29uc3RcIixcbiAgICBcImNvbnN0ZXhwclwiLFxuICAgIFwiY29uc3RfY2FzdFwiLFxuICAgIFwiY29udGludWVcIixcbiAgICBcImNwdVwiLFxuICAgIFwiZGVjbHR5cGVcIixcbiAgICBcImRlZmF1bHRcIixcbiAgICBcImRlbGVnYXRlXCIsXG4gICAgXCJkZWxldGVcIixcbiAgICBcImRvXCIsXG4gICAgXCJkb3VibGVcIixcbiAgICBcImR5bmFtaWNfY2FzdFwiLFxuICAgIFwiZWFjaFwiLFxuICAgIFwiZWxzZVwiLFxuICAgIFwiZW51bVwiLFxuICAgIFwiZXZlbnRcIixcbiAgICBcImV4cGxpY2l0XCIsXG4gICAgXCJleHBvcnRcIixcbiAgICBcImV4dGVyblwiLFxuICAgIFwiZmFsc2VcIixcbiAgICBcImZpbmFsXCIsXG4gICAgXCJmaW5hbGx5XCIsXG4gICAgXCJmbG9hdFwiLFxuICAgIFwiZm9yXCIsXG4gICAgXCJmcmllbmRcIixcbiAgICBcImdjbmV3XCIsXG4gICAgXCJnZW5lcmljXCIsXG4gICAgXCJnb3RvXCIsXG4gICAgXCJpZlwiLFxuICAgIFwiaW5cIixcbiAgICBcImluaXRvbmx5XCIsXG4gICAgXCJpbmxpbmVcIixcbiAgICBcImludFwiLFxuICAgIFwiaW50ZXJmYWNlXCIsXG4gICAgXCJpbnRlcmlvcl9wdHJcIixcbiAgICBcImludGVybmFsXCIsXG4gICAgXCJsaXRlcmFsXCIsXG4gICAgXCJsb25nXCIsXG4gICAgXCJtdXRhYmxlXCIsXG4gICAgXCJuYW1lc3BhY2VcIixcbiAgICBcIm5ld1wiLFxuICAgIFwibm9leGNlcHRcIixcbiAgICBcIm51bGxwdHJcIixcbiAgICBcIl9fbnVsbHB0clwiLFxuICAgIFwib3BlcmF0b3JcIixcbiAgICBcIm92ZXJyaWRlXCIsXG4gICAgXCJwYXJ0aWFsXCIsXG4gICAgXCJwYXNjYWxcIixcbiAgICBcInBpbl9wdHJcIixcbiAgICBcInByaXZhdGVcIixcbiAgICBcInByb3BlcnR5XCIsXG4gICAgXCJwcm90ZWN0ZWRcIixcbiAgICBcInB1YmxpY1wiLFxuICAgIFwicmVmXCIsXG4gICAgXCJyZWdpc3RlclwiLFxuICAgIFwicmVpbnRlcnByZXRfY2FzdFwiLFxuICAgIFwicmVzdHJpY3RcIixcbiAgICBcInJldHVyblwiLFxuICAgIFwic2FmZV9jYXN0XCIsXG4gICAgXCJzZWFsZWRcIixcbiAgICBcInNob3J0XCIsXG4gICAgXCJzaWduZWRcIixcbiAgICBcInNpemVvZlwiLFxuICAgIFwic3RhdGljXCIsXG4gICAgXCJzdGF0aWNfYXNzZXJ0XCIsXG4gICAgXCJzdGF0aWNfY2FzdFwiLFxuICAgIFwic3RydWN0XCIsXG4gICAgXCJzd2l0Y2hcIixcbiAgICBcInRlbXBsYXRlXCIsXG4gICAgXCJ0aGlzXCIsXG4gICAgXCJ0aHJlYWRfbG9jYWxcIixcbiAgICBcInRocm93XCIsXG4gICAgXCJ0aWxlX3N0YXRpY1wiLFxuICAgIFwidHJ1ZVwiLFxuICAgIFwidHJ5XCIsXG4gICAgXCJ0eXBlZGVmXCIsXG4gICAgXCJ0eXBlaWRcIixcbiAgICBcInR5cGVuYW1lXCIsXG4gICAgXCJ1bmlvblwiLFxuICAgIFwidW5zaWduZWRcIixcbiAgICBcInVzaW5nXCIsXG4gICAgXCJ2aXJ0dWFsXCIsXG4gICAgXCJ2b2lkXCIsXG4gICAgXCJ2b2xhdGlsZVwiLFxuICAgIFwid2NoYXJfdFwiLFxuICAgIFwid2hlcmVcIixcbiAgICBcIndoaWxlXCIsXG4gICAgXCJfYXNtXCIsXG4gICAgXCJfYmFzZWRcIixcbiAgICBcIl9jZGVjbFwiLFxuICAgIFwiX2RlY2xzcGVjXCIsXG4gICAgXCJfZmFzdGNhbGxcIixcbiAgICBcIl9pZl9leGlzdHNcIixcbiAgICBcIl9pZl9ub3RfZXhpc3RzXCIsXG4gICAgXCJfaW5saW5lXCIsXG4gICAgXCJfbXVsdGlwbGVfaW5oZXJpdGFuY2VcIixcbiAgICBcIl9wYXNjYWxcIixcbiAgICBcIl9zaW5nbGVfaW5oZXJpdGFuY2VcIixcbiAgICBcIl9zdGRjYWxsXCIsXG4gICAgXCJfdmlydHVhbF9pbmhlcml0YW5jZVwiLFxuICAgIFwiX3c2NFwiLFxuICAgIFwiX19hYnN0cmFjdFwiLFxuICAgIFwiX19hbGlnbm9mXCIsXG4gICAgXCJfX2FzbVwiLFxuICAgIFwiX19hc3N1bWVcIixcbiAgICBcIl9fYmFzZWRcIixcbiAgICBcIl9fYm94XCIsXG4gICAgXCJfX2J1aWx0aW5fYWxpZ25vZlwiLFxuICAgIFwiX19jZGVjbFwiLFxuICAgIFwiX19jbHJjYWxsXCIsXG4gICAgXCJfX2RlY2xzcGVjXCIsXG4gICAgXCJfX2RlbGVnYXRlXCIsXG4gICAgXCJfX2V2ZW50XCIsXG4gICAgXCJfX2V4Y2VwdFwiLFxuICAgIFwiX19mYXN0Y2FsbFwiLFxuICAgIFwiX19maW5hbGx5XCIsXG4gICAgXCJfX2ZvcmNlaW5saW5lXCIsXG4gICAgXCJfX2djXCIsXG4gICAgXCJfX2hvb2tcIixcbiAgICBcIl9faWRlbnRpZmllclwiLFxuICAgIFwiX19pZl9leGlzdHNcIixcbiAgICBcIl9faWZfbm90X2V4aXN0c1wiLFxuICAgIFwiX19pbmxpbmVcIixcbiAgICBcIl9faW50MTI4XCIsXG4gICAgXCJfX2ludDE2XCIsXG4gICAgXCJfX2ludDMyXCIsXG4gICAgXCJfX2ludDY0XCIsXG4gICAgXCJfX2ludDhcIixcbiAgICBcIl9faW50ZXJmYWNlXCIsXG4gICAgXCJfX2xlYXZlXCIsXG4gICAgXCJfX20xMjhcIixcbiAgICBcIl9fbTEyOGRcIixcbiAgICBcIl9fbTEyOGlcIixcbiAgICBcIl9fbTI1NlwiLFxuICAgIFwiX19tMjU2ZFwiLFxuICAgIFwiX19tMjU2aVwiLFxuICAgIFwiX19tNjRcIixcbiAgICBcIl9fbXVsdGlwbGVfaW5oZXJpdGFuY2VcIixcbiAgICBcIl9fbmV3c2xvdFwiLFxuICAgIFwiX19ub2djXCIsXG4gICAgXCJfX25vb3BcIixcbiAgICBcIl9fbm91bndpbmRcIixcbiAgICBcIl9fbm92dG9yZGlzcFwiLFxuICAgIFwiX19wYXNjYWxcIixcbiAgICBcIl9fcGluXCIsXG4gICAgXCJfX3ByYWdtYVwiLFxuICAgIFwiX19wcm9wZXJ0eVwiLFxuICAgIFwiX19wdHIzMlwiLFxuICAgIFwiX19wdHI2NFwiLFxuICAgIFwiX19yYWlzZVwiLFxuICAgIFwiX19yZXN0cmljdFwiLFxuICAgIFwiX19yZXN1bWVcIixcbiAgICBcIl9fc2VhbGVkXCIsXG4gICAgXCJfX3NpbmdsZV9pbmhlcml0YW5jZVwiLFxuICAgIFwiX19zdGRjYWxsXCIsXG4gICAgXCJfX3N1cGVyXCIsXG4gICAgXCJfX3RoaXNjYWxsXCIsXG4gICAgXCJfX3RyeVwiLFxuICAgIFwiX190cnlfY2FzdFwiLFxuICAgIFwiX190eXBlb2ZcIixcbiAgICBcIl9fdW5hbGlnbmVkXCIsXG4gICAgXCJfX3VuaG9va1wiLFxuICAgIFwiX191dWlkb2ZcIixcbiAgICBcIl9fdmFsdWVcIixcbiAgICBcIl9fdmlydHVhbF9pbmhlcml0YW5jZVwiLFxuICAgIFwiX193NjRcIixcbiAgICBcIl9fd2NoYXJfdFwiXG4gIF0sXG4gIG9wZXJhdG9yczogW1xuICAgIFwiPVwiLFxuICAgIFwiPlwiLFxuICAgIFwiPFwiLFxuICAgIFwiIVwiLFxuICAgIFwiflwiLFxuICAgIFwiP1wiLFxuICAgIFwiOlwiLFxuICAgIFwiPT1cIixcbiAgICBcIjw9XCIsXG4gICAgXCI+PVwiLFxuICAgIFwiIT1cIixcbiAgICBcIiYmXCIsXG4gICAgXCJ8fFwiLFxuICAgIFwiKytcIixcbiAgICBcIi0tXCIsXG4gICAgXCIrXCIsXG4gICAgXCItXCIsXG4gICAgXCIqXCIsXG4gICAgXCIvXCIsXG4gICAgXCImXCIsXG4gICAgXCJ8XCIsXG4gICAgXCJeXCIsXG4gICAgXCIlXCIsXG4gICAgXCI8PFwiLFxuICAgIFwiPj5cIixcbiAgICBcIj4+PlwiLFxuICAgIFwiKz1cIixcbiAgICBcIi09XCIsXG4gICAgXCIqPVwiLFxuICAgIFwiLz1cIixcbiAgICBcIiY9XCIsXG4gICAgXCJ8PVwiLFxuICAgIFwiXj1cIixcbiAgICBcIiU9XCIsXG4gICAgXCI8PD1cIixcbiAgICBcIj4+PVwiLFxuICAgIFwiPj4+PVwiXG4gIF0sXG4gIHN5bWJvbHM6IC9bPT48IX4/OiZ8K1xcLSpcXC9cXF4lXSsvLFxuICBlc2NhcGVzOiAvXFxcXCg/OlthYmZucnR2XFxcXFwiJ118eFswLTlBLUZhLWZdezEsNH18dVswLTlBLUZhLWZdezR9fFVbMC05QS1GYS1mXXs4fSkvLFxuICBpbnRlZ2Vyc3VmZml4OiAvKFt1VV0obGx8TEx8bHxMKXwobGx8TEx8bHxMKT9bdVVdPykvLFxuICBmbG9hdHN1ZmZpeDogL1tmRmxMXT8vLFxuICBlbmNvZGluZzogL3V8dTh8VXxMLyxcbiAgdG9rZW5pemVyOiB7XG4gICAgcm9vdDogW1xuICAgICAgWy9AZW5jb2Rpbmc/UlxcXCIoPzooW14gKClcXFxcXFx0XSopKVxcKC8sIHsgdG9rZW46IFwic3RyaW5nLnJhdy5iZWdpblwiLCBuZXh0OiBcIkByYXcuJDFcIiB9XSxcbiAgICAgIFtcbiAgICAgICAgL1thLXpBLVpfXVxcdyovLFxuICAgICAgICB7XG4gICAgICAgICAgY2FzZXM6IHtcbiAgICAgICAgICAgIFwiQGtleXdvcmRzXCI6IHsgdG9rZW46IFwia2V5d29yZC4kMFwiIH0sXG4gICAgICAgICAgICBcIkBkZWZhdWx0XCI6IFwiaWRlbnRpZmllclwiXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgWy9eXFxzKiNcXHMqaW5jbHVkZS8sIHsgdG9rZW46IFwia2V5d29yZC5kaXJlY3RpdmUuaW5jbHVkZVwiLCBuZXh0OiBcIkBpbmNsdWRlXCIgfV0sXG4gICAgICBbL15cXHMqI1xccypcXHcrLywgXCJrZXl3b3JkLmRpcmVjdGl2ZVwiXSxcbiAgICAgIHsgaW5jbHVkZTogXCJAd2hpdGVzcGFjZVwiIH0sXG4gICAgICBbL1xcW1xccypcXFsvLCB7IHRva2VuOiBcImFubm90YXRpb25cIiwgbmV4dDogXCJAYW5ub3RhdGlvblwiIH1dLFxuICAgICAgWy9be30oKVxcW1xcXV0vLCBcIkBicmFja2V0c1wiXSxcbiAgICAgIFsvWzw+XSg/IUBzeW1ib2xzKS8sIFwiQGJyYWNrZXRzXCJdLFxuICAgICAgW1xuICAgICAgICAvQHN5bWJvbHMvLFxuICAgICAgICB7XG4gICAgICAgICAgY2FzZXM6IHtcbiAgICAgICAgICAgIFwiQG9wZXJhdG9yc1wiOiBcImRlbGltaXRlclwiLFxuICAgICAgICAgICAgXCJAZGVmYXVsdFwiOiBcIlwiXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgWy9cXGQqXFxkK1tlRV0oW1xcLStdP1xcZCspPyhAZmxvYXRzdWZmaXgpLywgXCJudW1iZXIuZmxvYXRcIl0sXG4gICAgICBbL1xcZCpcXC5cXGQrKFtlRV1bXFwtK10/XFxkKyk/KEBmbG9hdHN1ZmZpeCkvLCBcIm51bWJlci5mbG9hdFwiXSxcbiAgICAgIFsvMFt4WF1bMC05YS1mQS1GJ10qWzAtOWEtZkEtRl0oQGludGVnZXJzdWZmaXgpLywgXCJudW1iZXIuaGV4XCJdLFxuICAgICAgWy8wWzAtNyddKlswLTddKEBpbnRlZ2Vyc3VmZml4KS8sIFwibnVtYmVyLm9jdGFsXCJdLFxuICAgICAgWy8wW2JCXVswLTEnXSpbMC0xXShAaW50ZWdlcnN1ZmZpeCkvLCBcIm51bWJlci5iaW5hcnlcIl0sXG4gICAgICBbL1xcZFtcXGQnXSpcXGQoQGludGVnZXJzdWZmaXgpLywgXCJudW1iZXJcIl0sXG4gICAgICBbL1xcZChAaW50ZWdlcnN1ZmZpeCkvLCBcIm51bWJlclwiXSxcbiAgICAgIFsvWzssLl0vLCBcImRlbGltaXRlclwiXSxcbiAgICAgIFsvXCIoW15cIlxcXFxdfFxcXFwuKSokLywgXCJzdHJpbmcuaW52YWxpZFwiXSxcbiAgICAgIFsvXCIvLCBcInN0cmluZ1wiLCBcIkBzdHJpbmdcIl0sXG4gICAgICBbLydbXlxcXFwnXScvLCBcInN0cmluZ1wiXSxcbiAgICAgIFsvKCcpKEBlc2NhcGVzKSgnKS8sIFtcInN0cmluZ1wiLCBcInN0cmluZy5lc2NhcGVcIiwgXCJzdHJpbmdcIl1dLFxuICAgICAgWy8nLywgXCJzdHJpbmcuaW52YWxpZFwiXVxuICAgIF0sXG4gICAgd2hpdGVzcGFjZTogW1xuICAgICAgWy9bIFxcdFxcclxcbl0rLywgXCJcIl0sXG4gICAgICBbL1xcL1xcKlxcKig/IVxcLykvLCBcImNvbW1lbnQuZG9jXCIsIFwiQGRvY2NvbW1lbnRcIl0sXG4gICAgICBbL1xcL1xcKi8sIFwiY29tbWVudFwiLCBcIkBjb21tZW50XCJdLFxuICAgICAgWy9cXC9cXC8uKlxcXFwkLywgXCJjb21tZW50XCIsIFwiQGxpbmVjb21tZW50XCJdLFxuICAgICAgWy9cXC9cXC8uKiQvLCBcImNvbW1lbnRcIl1cbiAgICBdLFxuICAgIGNvbW1lbnQ6IFtcbiAgICAgIFsvW15cXC8qXSsvLCBcImNvbW1lbnRcIl0sXG4gICAgICBbL1xcKlxcLy8sIFwiY29tbWVudFwiLCBcIkBwb3BcIl0sXG4gICAgICBbL1tcXC8qXS8sIFwiY29tbWVudFwiXVxuICAgIF0sXG4gICAgbGluZWNvbW1lbnQ6IFtcbiAgICAgIFsvLipbXlxcXFxdJC8sIFwiY29tbWVudFwiLCBcIkBwb3BcIl0sXG4gICAgICBbL1teXSsvLCBcImNvbW1lbnRcIl1cbiAgICBdLFxuICAgIGRvY2NvbW1lbnQ6IFtcbiAgICAgIFsvW15cXC8qXSsvLCBcImNvbW1lbnQuZG9jXCJdLFxuICAgICAgWy9cXCpcXC8vLCBcImNvbW1lbnQuZG9jXCIsIFwiQHBvcFwiXSxcbiAgICAgIFsvW1xcLypdLywgXCJjb21tZW50LmRvY1wiXVxuICAgIF0sXG4gICAgc3RyaW5nOiBbXG4gICAgICBbL1teXFxcXFwiXSsvLCBcInN0cmluZ1wiXSxcbiAgICAgIFsvQGVzY2FwZXMvLCBcInN0cmluZy5lc2NhcGVcIl0sXG4gICAgICBbL1xcXFwuLywgXCJzdHJpbmcuZXNjYXBlLmludmFsaWRcIl0sXG4gICAgICBbL1wiLywgXCJzdHJpbmdcIiwgXCJAcG9wXCJdXG4gICAgXSxcbiAgICByYXc6IFtcbiAgICAgIFtcbiAgICAgICAgLyguKikoXFwpKSg/OihbXiAoKVxcXFxcXHRcIl0qKSkoXFxcIikvLFxuICAgICAgICB7XG4gICAgICAgICAgY2FzZXM6IHtcbiAgICAgICAgICAgIFwiJDM9PSRTMlwiOiBbXG4gICAgICAgICAgICAgIFwic3RyaW5nLnJhd1wiLFxuICAgICAgICAgICAgICBcInN0cmluZy5yYXcuZW5kXCIsXG4gICAgICAgICAgICAgIFwic3RyaW5nLnJhdy5lbmRcIixcbiAgICAgICAgICAgICAgeyB0b2tlbjogXCJzdHJpbmcucmF3LmVuZFwiLCBuZXh0OiBcIkBwb3BcIiB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgXCJAZGVmYXVsdFwiOiBbXCJzdHJpbmcucmF3XCIsIFwic3RyaW5nLnJhd1wiLCBcInN0cmluZy5yYXdcIiwgXCJzdHJpbmcucmF3XCJdXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgWy8uKi8sIFwic3RyaW5nLnJhd1wiXVxuICAgIF0sXG4gICAgYW5ub3RhdGlvbjogW1xuICAgICAgeyBpbmNsdWRlOiBcIkB3aGl0ZXNwYWNlXCIgfSxcbiAgICAgIFsvdXNpbmd8YWxpZ25hcy8sIFwia2V5d29yZFwiXSxcbiAgICAgIFsvW2EtekEtWjAtOV9dKy8sIFwiYW5ub3RhdGlvblwiXSxcbiAgICAgIFsvWyw6XS8sIFwiZGVsaW1pdGVyXCJdLFxuICAgICAgWy9bKCldLywgXCJAYnJhY2tldHNcIl0sXG4gICAgICBbL1xcXVxccypcXF0vLCB7IHRva2VuOiBcImFubm90YXRpb25cIiwgbmV4dDogXCJAcG9wXCIgfV1cbiAgICBdLFxuICAgIGluY2x1ZGU6IFtcbiAgICAgIFtcbiAgICAgICAgLyhcXHMqKSg8KShbXjw+XSopKD4pLyxcbiAgICAgICAgW1xuICAgICAgICAgIFwiXCIsXG4gICAgICAgICAgXCJrZXl3b3JkLmRpcmVjdGl2ZS5pbmNsdWRlLmJlZ2luXCIsXG4gICAgICAgICAgXCJzdHJpbmcuaW5jbHVkZS5pZGVudGlmaWVyXCIsXG4gICAgICAgICAgeyB0b2tlbjogXCJrZXl3b3JkLmRpcmVjdGl2ZS5pbmNsdWRlLmVuZFwiLCBuZXh0OiBcIkBwb3BcIiB9XG4gICAgICAgIF1cbiAgICAgIF0sXG4gICAgICBbXG4gICAgICAgIC8oXFxzKikoXCIpKFteXCJdKikoXCIpLyxcbiAgICAgICAgW1xuICAgICAgICAgIFwiXCIsXG4gICAgICAgICAgXCJrZXl3b3JkLmRpcmVjdGl2ZS5pbmNsdWRlLmJlZ2luXCIsXG4gICAgICAgICAgXCJzdHJpbmcuaW5jbHVkZS5pZGVudGlmaWVyXCIsXG4gICAgICAgICAgeyB0b2tlbjogXCJrZXl3b3JkLmRpcmVjdGl2ZS5pbmNsdWRlLmVuZFwiLCBuZXh0OiBcIkBwb3BcIiB9XG4gICAgICAgIF1cbiAgICAgIF1cbiAgICBdXG4gIH1cbn07XG5leHBvcnQge1xuICBjb25mLFxuICBsYW5ndWFnZVxufTtcbiJdLCJuYW1lcyI6WyJjb25mIiwiY29tbWVudHMiLCJsaW5lQ29tbWVudCIsImJsb2NrQ29tbWVudCIsImJyYWNrZXRzIiwiYXV0b0Nsb3NpbmdQYWlycyIsIm9wZW4iLCJjbG9zZSIsIm5vdEluIiwic3Vycm91bmRpbmdQYWlycyIsImZvbGRpbmciLCJtYXJrZXJzIiwic3RhcnQiLCJSZWdFeHAiLCJlbmQiLCJsYW5ndWFnZSIsImRlZmF1bHRUb2tlbiIsInRva2VuUG9zdGZpeCIsInRva2VuIiwia2V5d29yZHMiLCJvcGVyYXRvcnMiLCJzeW1ib2xzIiwiZXNjYXBlcyIsImludGVnZXJzdWZmaXgiLCJmbG9hdHN1ZmZpeCIsImVuY29kaW5nIiwidG9rZW5pemVyIiwicm9vdCIsIm5leHQiLCJjYXNlcyIsImluY2x1ZGUiLCJ3aGl0ZXNwYWNlIiwiY29tbWVudCIsImxpbmVjb21tZW50IiwiZG9jY29tbWVudCIsInN0cmluZyIsInJhdyIsImFubm90YXRpb24iXSwic291cmNlUm9vdCI6IiJ9